#****************************************************************************
# Objective of Script ?
# ---------------------------------
#create vpc, subnet, internet gateway, route table , web instance with apache2 
# sample page, application instance . Add a entry in route 53 hosted zone
#
# Pre-requisite ?
# ----------------------------------
# 1) Keypair   // Require to access EC2 instance 
# 2) Route 53 Hosted zone  // Require to add  A record  entry of website
#
# Author : Abhiram Das  
# Last update Date : 17/03/2023
#****************************************************************************


AWSTemplateFormatVersion: "2010-09-09"
Description: Template is create  a public VPC and run a php web application  in public network 

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.micro]
    ConstraintDescription: must be a valid EC2 instance type.

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x. 
    
  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'  

Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.0.0/16
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags: 
       - Key: Name
         Value: intelli-vpc-01
 
  publicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 192.168.1.0/24
      VpcId: 
        Ref: myVPC
      MapPublicIpOnLaunch: 'true'
      Tags:
       - Key: Name
         Value: public subnet

  privateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 192.168.2.0/24
      VpcId: 
        Ref: myVPC
      MapPublicIpOnLaunch: 'false'
      Tags:
       - Key: Name
         Value: private subnet

  MyIgw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
       - Key: Name
         Value: intelli-IGW

  MyIgwAttachToVPC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: 
        Ref: MyIgw
      VpcId: 
        Ref: myVPC

  publicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: 
        Ref: myVPC
      Tags:
       - Key: Name
         Value: public-route-table

  privateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: 
        Ref: myVPC
      Tags:
       - Key: Name
         Value: private-route-table

  PublicRouteEntries:
    Type: AWS::EC2::Route
    DependsOn: MyIgwAttachToVPC
    Properties:
      RouteTableId:
        Ref: publicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyIgw

  myPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: publicSubnet
      RouteTableId:
        Ref: publicRouteTable

  myPrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: privateSubnet
      RouteTableId:
        Ref: privateRouteTable

  publicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http and ssh
      VpcId: 
        Ref: myVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref 'SSHLocation'
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: public-sg

  privateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH only
      VpcId: 
        Ref: myVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref 'SSHLocation'
      Tags:
        - Key: Name
          Value: private-sg

  EC2Web01:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroupIds: 
        - !Ref publicSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !Ref LatestAmiId
      SubnetId: 
        Ref:  publicSubnet
      UserData:
        Fn::Base64: !Sub
        - |
          #!/bin/bash
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          # Sleep for the instance role might not be properly attached
          sleep 10
          # Install httpd2 for testing 
          rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
          rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
          sudo yum --enablerepo=remi,remi-php71 install httpd php php-common -y
          sudo systemctl start httpd.service
          sudo systemctl enable httpd.service
          touch index.html
          echo "<html><head><title>Demo Page</title></head><body><h1>Hello,</h1><p>I am in N. Mumbai Region</p></body></html>" > index.html
          sudo mv index.html /var/www/html/
        - {
          }
      Tags:
        - Key: Name
          Value: ec2-web-01

  EC2App01:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroupIds: 
        - !Ref privateSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !Ref LatestAmiId
      SubnetId: 
        Ref:  privateSubnet
      Tags:
        - Key: Name
          Value: ec2-app-01        

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: Z09076832D27G84ZZ9SXY 
      Name: abhiramdas99.xyz 
      TTL: 300
      Type: A      
      ResourceRecords:
        - !GetAtt EC2Web01.PublicIp
